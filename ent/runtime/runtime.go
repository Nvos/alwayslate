// Code generated by entc, DO NOT EDIT.

package runtime

import (
	"alwayslate/ent/schema"
	"alwayslate/ent/timesheet"
	"alwayslate/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	timesheetFields := schema.Timesheet{}.Fields()
	_ = timesheetFields
	// timesheetDescDuration is the schema descriptor for duration field.
	timesheetDescDuration := timesheetFields[2].Descriptor()
	// timesheet.DurationValidator is a validator for the "duration" field. It is called by the builders before save.
	timesheet.DurationValidator = timesheetDescDuration.Validators[0].(func(int64) error)
	userMixin := schema.User{}.Mixin()
	userMixinHooks0 := userMixin[0].Hooks()
	user.Hooks[0] = userMixinHooks0[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}

const (
	Version = "(devel)" // Version of ent codegen.
)
