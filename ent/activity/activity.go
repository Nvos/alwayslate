// Code generated by entc, DO NOT EDIT.

package activity

const (
	// Label holds the string label denoting the activity type in the database.
	Label = "activity"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeTimesheets holds the string denoting the timesheets edge name in mutations.
	EdgeTimesheets = "timesheets"
	// EdgeProject holds the string denoting the project edge name in mutations.
	EdgeProject = "project"
	// Table holds the table name of the activity in the database.
	Table = "activities"
	// TimesheetsTable is the table the holds the timesheets relation/edge.
	TimesheetsTable = "timesheets"
	// TimesheetsInverseTable is the table name for the Timesheet entity.
	// It exists in this package in order to avoid circular dependency with the "timesheet" package.
	TimesheetsInverseTable = "timesheets"
	// TimesheetsColumn is the table column denoting the timesheets relation/edge.
	TimesheetsColumn = "activity_timesheets"
	// ProjectTable is the table the holds the project relation/edge.
	ProjectTable = "activities"
	// ProjectInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectInverseTable = "projects"
	// ProjectColumn is the table column denoting the project relation/edge.
	ProjectColumn = "project_activities"
)

// Columns holds all SQL columns for activity fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "activities"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"project_activities",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
